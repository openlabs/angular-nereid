"use strict";angular.module("openlabs.angular-nereid-auth",["base64"]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(function($q,$location,$rootScope){return{responseError:function(rejection){return 401===rejection.status&&$rootScope.$broadcast("nereid-auth:loginRequired",rejection),$q.reject(rejection)}}})}]).factory("nereidAuth",["$http","$base64","$rootScope",function($http,$base64,$rootScope){var apiBasePath="",loginTokenEndpoint="/login/token",userInfoEndpoint="/me",token=localStorage.getItem("token"),user={},setHeaders=function(token){return token?void($http.defaults.headers.common.Authorization="Token "+token.toString()):void delete $http.defaults.headers.common.Authorization},refreshUserInfo=function(){return $http.get(apiBasePath+userInfoEndpoint).success(function(data){angular.extend(user,data)})},isLoggedIn=function(){return token?!0:!1};token&&(setHeaders(token),refreshUserInfo().error(function(data,status){401==status&&logoutUser()}));var setToken=function(newToken){newToken?localStorage.setItem("token",newToken):localStorage.removeItem("token"),setHeaders(newToken),token=newToken,newToken&&refreshUserInfo()},logoutUser=function(){setToken(null),user={},$rootScope.$broadcast("nereid-auth:logout")},login=function(email,password){var basic_auth=$base64.encode(email+":"+password);return $http.post(apiBasePath+loginTokenEndpoint,{},{headers:{Authorization:"Basic "+basic_auth}}).success(function(data){user=data.user,setToken(data.token),$rootScope.$broadcast("nereid-auth:login",data)}).error(function(reason,status,headers){$rootScope.$broadcast("nereid-auth:loginFailed",{reason:reason,status:status,headers:headers()}),logoutUser()})},hasAllPermissions=function(permissions){if(!isLoggedIn()||!user.permissions||!permissions)return!1;for(var i in permissions)if(-1==user.permissions.indexOf(permissions[i]))return!1;return!0},hasAnyPermission=function(permissions){if(!isLoggedIn()||!user.permissions||!permissions)return!1;for(var i in permissions)if(-1!=user.permissions.indexOf(permissions[i]))return!0;return!1},self={setLoginEndpoint:function(new_end_point){loginTokenEndpoint=new_end_point},setUserInfoEndpoint:function(new_end_point){userInfoEndpoint=new_end_point},setapiBasePath:function(new_base_path){apiBasePath=new_base_path},hasAnyPermission:hasAnyPermission,hasAllPermissions:hasAllPermissions,login:login,logoutUser:logoutUser,user:function(){return user},refreshUserInfo:refreshUserInfo,isLoggedIn:isLoggedIn};return self}]).directive("showIfAuth",["$animate","nereidAuth",function($animate,nereidAuth){return function(scope,element){scope.$watch(function(){return nereidAuth.isLoggedIn()},function(){$animate[nereidAuth.isLoggedIn()?"removeClass":"addClass"](element,"ng-hide")})}}]).directive("hideIfAuth",["$animate","nereidAuth",function($animate,nereidAuth){return function(scope,element){scope.$watch(function(){return nereidAuth.isLoggedIn()},function(){$animate[nereidAuth.isLoggedIn()?"addClass":"removeClass"](element,"ng-hide")})}}]).directive("showIfAnyPermission",["$animate","nereidAuth",function($animate,nereidAuth){return function(scope,element,attrs){var permissions=scope.$eval(attrs.showIfAnyPermission);scope.$watch(function(){return nereidAuth.user().permissions},function(){$animate[nereidAuth.hasAnyPermission(permissions)?"removeClass":"addClass"](element,"ng-hide")})}}]).directive("showIfAllPermissions",["$animate","nereidAuth",function($animate,nereidAuth){return function(scope,element,attrs){var permissions=scope.$eval(attrs.showIfAllPermissions);scope.$watch(function(){return nereidAuth.user().permissions},function(){$animate[nereidAuth.hasAllPermissions(permissions)?"removeClass":"addClass"](element,"ng-hide")})}}]).directive("hideIfAnyPermission",["$animate","nereidAuth",function($animate,nereidAuth){return function(scope,element,attrs){var permissions=scope.$eval(attrs.hideIfAnyPermission);scope.$watch(function(){return nereidAuth.user().permissions},function(){$animate[nereidAuth.hasAnyPermission(permissions)?"addClass":"removeClass"](element,"ng-hide")})}}]).directive("hideIfAllPermissions",["$animate","nereidAuth",function($animate,nereidAuth){return function(scope,element,attrs){var permissions=scope.$eval(attrs.hideIfAllPermissions);scope.$watch(function(){return nereidAuth.user().permissions},function(){$animate[nereidAuth.hasAllPermissions(permissions)?"addClass":"removeClass"](element,"ng-hide")})}}]).directive("nereidAuth",function(nereidAuth){return{restrict:"A",link:function($scope){$scope.logout=function(){nereidAuth.logoutUser()}}}});